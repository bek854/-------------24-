
name: Go CI/CD Pipeline

on:
  push:
    branches: [ "main", "develop" ]
    tags: [ "v*.*.*" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  # Job для тестирования и сборки
  test-and-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.20, 1.21]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
        cache: true
        cache-dependency-path: go.sum

    - name: Verify dependencies
      run: go mod verify

    - name: Build
      run: go build -v -o todo-app ./...

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...

    - name: Run vet
      run: go vet ./...

    - name: Upload test coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests

  # Job для линтинга
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=5m

  # Job для публикации релиза (только для тегов)
  release:
    needs: [test-and-build, lint]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true

    - name: Build release binary
      run: |
        go build -v -o todo-app ./...
        mkdir -p release

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: todo-app
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
